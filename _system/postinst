#!/bin/sh

set -e

case "$1" in
# configure)
#   # Add prometheus user
#   adduser --quiet --system --home /var/lib/prometheus --no-create-home \
#           --group --gecos "Prometheus daemon" prometheus
# ;;

  abort-upgrade|abort-remove|abort-deconfigure|configure)
    :
  ;;

  *)
    echo "postinst called with unknown argument '$1'" >&2
    exit 1
  ;;
esac

if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
        # This will only remove masks created by d-s-h on package removal.
        deb-systemd-helper unmask 'prometheus-fail2ban-exporter.service' >/dev/null || true

        # was-enabled defaults to true, so new installations run enable.
        if deb-systemd-helper --quiet was-enabled 'prometheus-fail2ban-exporter.service'; then
                # Enables the unit on first installation, creates new
                # symlinks on upgrades if the unit file has changed.
                deb-systemd-helper enable 'prometheus-fail2ban-exporter.service' >/dev/null || true
        else
                # Update the statefile to add new symlinks (if any), which need to be
                # cleaned up on purge. Also remove old symlinks.
                deb-systemd-helper update-state 'prometheus-fail2ban-exporter.service' >/dev/null || true
        fi
fi

if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
        if [ -d /run/systemd/system ]; then
                systemctl --system daemon-reload >/dev/null || true
                if [ -n "$2" ]; then
                        _dh_action=restart
                else
                        _dh_action=start
                fi
                deb-systemd-invoke $_dh_action 'prometheus-fail2ban-exporter.service' >/dev/null || true
        fi
fi

exit 0

